// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Template_Program.Models;

namespace Template_Program.Migrations
{
    [DbContext(typeof(TemplateContext))]
    [Migration("20180531035609_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rc1-32029")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Template_Program.Models.Breed", b =>
                {
                    b.Property<int>("BreedID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("BreedID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Breed");

                    b.HasData(
                        new { BreedID = 1, Description = "สุนัข", Name = "สุนัข" },
                        new { BreedID = 2, Description = "แมว", Name = "แมว" },
                        new { BreedID = 3, Description = "เต่า", Name = "เต่า" },
                        new { BreedID = 4, Description = "กระรอก", Name = "กระรอก" },
                        new { BreedID = 5, Description = "กระต่าย", Name = "กระต่าย" }
                    );
                });

            modelBuilder.Entity("Template_Program.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Address2");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("FirstName")
                        .HasMaxLength(250);

                    b.Property<string>("Image");

                    b.Property<string>("Infomation");

                    b.Property<string>("LastName")
                        .HasMaxLength(250);

                    b.Property<string>("MailAddress");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("PhoneNo");

                    b.Property<DateTime>("RegisterDate");

                    b.Property<string>("Remark")
                        .HasMaxLength(250);

                    b.Property<int>("Sex");

                    b.HasKey("CustomerId");

                    b.HasIndex("PhoneNo")
                        .IsUnique()
                        .HasFilter("[PhoneNo] IS NOT NULL");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Template_Program.Models.Diagnoses", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Remark")
                        .HasMaxLength(250);

                    b.HasKey("DiagnosisId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("Template_Program.Models.Medicines", b =>
                {
                    b.Property<int>("MedicineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("MedicineClass")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Remark")
                        .HasMaxLength(250);

                    b.HasKey("MedicineId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("Template_Program.Models.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BreedId");

                    b.Property<DateTime?>("BrithDate");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int?>("CustomerId");

                    b.Property<string>("Image");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("PetName")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("RegisterDate");

                    b.Property<string>("Remark")
                        .HasMaxLength(250);

                    b.Property<int>("Sex");

                    b.HasKey("PetId");

                    b.HasIndex("BreedId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("Template_Program.Models.PetHaveDiagnosis", b =>
                {
                    b.Property<int>("PetHaveDiagnosisMasterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BreathingRate");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<DateTime>("DiagnosisDate");

                    b.Property<int?>("DiagnosisId");

                    b.Property<double?>("HeartRate");

                    b.Property<bool?>("HeartSound");

                    b.Property<bool?>("LungSound");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<int?>("MucousMembrane");

                    b.Property<int?>("PetId");

                    b.Property<string>("Remark")
                        .HasMaxLength(250);

                    b.Property<double?>("Weight");

                    b.HasKey("PetHaveDiagnosisMasterId");

                    b.HasIndex("DiagnosisId")
                        .IsUnique()
                        .HasFilter("[DiagnosisId] IS NOT NULL");

                    b.ToTable("PetHaveDiagnosis");
                });

            modelBuilder.Entity("Template_Program.Models.Treatments", b =>
                {
                    b.Property<int>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int?>("DiagnosisId");

                    b.Property<int?>("MedicineId");

                    b.Property<DateTime?>("ModifyDate");

                    b.Property<string>("Remark")
                        .HasMaxLength(250);

                    b.Property<string>("TreatmentRegimen")
                        .HasMaxLength(250);

                    b.Property<string>("Uom");

                    b.Property<double?>("Volumes");

                    b.HasKey("TreatmentId");

                    b.HasIndex("DiagnosisId");

                    b.HasIndex("MedicineId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("Template_Program.Models.Pet", b =>
                {
                    b.HasOne("Template_Program.Models.Breed", "Breed")
                        .WithMany("Pets")
                        .HasForeignKey("BreedId");

                    b.HasOne("Template_Program.Models.Customer", "Customer")
                        .WithMany("Pets")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("Template_Program.Models.PetHaveDiagnosis", b =>
                {
                    b.HasOne("Template_Program.Models.Diagnoses", "Diagnose")
                        .WithOne("PetHaveDiagnosis")
                        .HasForeignKey("Template_Program.Models.PetHaveDiagnosis", "DiagnosisId");
                });

            modelBuilder.Entity("Template_Program.Models.Treatments", b =>
                {
                    b.HasOne("Template_Program.Models.Diagnoses", "Diagnoses")
                        .WithMany()
                        .HasForeignKey("DiagnosisId");

                    b.HasOne("Template_Program.Models.Medicines", "Medicines")
                        .WithMany()
                        .HasForeignKey("MedicineId");
                });
#pragma warning restore 612, 618
        }
    }
}
